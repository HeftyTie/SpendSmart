@page "/dashboard/savings"
@using SpendSmart.Pages.Dashboard.Content.Accounts
@model SpendSmart.Pages.Dashboard.Content.Savings.SavingsModel
@{
	Layout = "./_DashboardContent";
	ViewData["Title"] = "Savings";
	var savings = Model.Savings;
}

@section TableHeader
{
	@if (savings.Any())
	{
		var headerProperties = new List<string> { "Name", "TypeName", "Balance", "Goal" };

		foreach (var propertyName in headerProperties)
		{
			var propertyDisplayName = propertyName switch
			{
				"Name" => "Account",
				"TypeName" => "Name",
				"Goal" => "Savings Goal",
				_ => propertyName
			};

			<th>
				<button id="@($"{propertyName}Sort")" class="btn btn-table m-0 b-0">
					<span>@propertyDisplayName</span>
					<i class="bi bi-arrow-down-up ms-2"></i>
				</button>
			</th>
		}
		<th></th>
	}
}

@section TableBody
{
	@if (savings.Any())
	{
		foreach (var saving in savings)
		{
			<tr>
				<td>@saving.Name</td>
				<td>@saving.TypeName</td>
				<td class="@(saving.Balance > 0 ? "text-success" : saving.Balance < 0 ? "text-danger" : "")">
					@saving.Balance.ToString("C2")
				</td>
				<td class="@(saving.Goal > 0 ? "text-success" : saving.Goal < 0 ? "text-danger" : "")">
					@saving.Goal.ToString("C2")
				</td>
				<td>
					<div class="dropdown d-flex justify-content-end position-absolute">
						<a class="nav-link" data-bs-toggle="dropdown" aria-expanded="false">
							<i class="bi bi-three-dots-vertical"></i>
						</a>
						<ul class="dropdown-menu dropdown-menu-end p-1" aria-labelledby="dropdownFor-@saving.Id" style="position: absolute; right: 0; top: 100%; z-index: 1050;">
							<li>
								<a class="dropdown-item text-info" data-bs-toggle="modal" data-bs-target="#editModal" data-item-id="@saving.Id">
									<i class="bi bi-pencil-square h6"></i>
									<span class="h6 mx-1">Edit</span>
								</a>
							</li>
							<li>
								<a class="dropdown-item text-danger" data-bs-toggle="modal" data-bs-target="#deleteModal" data-item-id="@saving.Id">
									<i class="bi bi-trash h6"></i>
									<span class="h6 mx-1">Delete</span>
								</a>
							</li>
						</ul>
					</div>
				</td>
			</tr>
		}
	}
	else
	{
		<tr>
			<td class="text-center">No savings found.</td>
		</tr>
	}
}

@section AddForm {
	<div class="form-group">
		<label asp-for="NewSavings.TypeName" class="form-label">Name</label>
		<input asp-for="NewSavings.TypeName" type="text" class="form-control" />
		<span asp-validation-for="NewSavings.TypeName" class="text-danger"></span>
	</div>

	<div class="form-group">
		<label asp-for="NewSavings.Goal" class="form-label"></label>
		<input asp-for="NewSavings.Goal" type="number" class="form-control" />
		<span asp-validation-for="NewSavings.Goal" class="text-danger"></span>
	</div>

	<div class="form-group">
		<label asp-for="NewSavings.Name" class="form-label">Account</label>
		<select asp-for="NewSavings.Name" class="form-control accountSelect">
			@if (TempData["Accounts"] is List<string> accounts && accounts.Any())
			{
				accounts = accounts.OrderBy(a => a).ToList();
				@foreach (var account in accounts)
				{
					<option value="@account" data-account="@account">@account</option>
				}
			}
			else
			{
				<option value="" disabled selected>No accounts of type 'none' or 'savings' found.</option>
			}
		</select>
		<span asp-validation-for="NewSavings.Name" class="text-danger"></span>
	</div>
}